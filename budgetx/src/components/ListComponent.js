import React  from 'react';
import { useSelector } from 'react-redux';
import './ListComponent.css';
import Card from './Card.js';


function ListComponent() {
  const list = useSelector((state) => state);
  const filteredList = list.expenseList.filter((item) => item.title.includes(list.query));

  return (
    <div className="list-component-container">
     

      {filteredList.length > 0 ?
      (
        <div className="list-container-wrap">
         

          {filteredList?.map((el, index) => {
            return (
              <div className="card-container" key={index}>
                <Card item={el} />
              </div>
            );
          })}
        </div>
      )
      
      :
      
      (
        <div className="home-empty">
          <svg width="321" height="313" viewBox="0 0 321 313" fill="none"  xmlns="http://www.w3.org/2000/svg">
            <g clipPath="url(#clip0_4_77)">
              <path
                d="M203.784 70.3927H117.288C115.317 70.3951 113.428 71.1783 112.034 72.5706C110.64 73.9628 109.856 75.8505 109.854 77.8194V269.851L108.862 270.153L87.6437 276.644C86.6381 276.95 85.5519 276.845 84.6236 276.352C83.6953 275.859 83.0007 275.018 82.6923 274.014L19.5762 68.0706C19.2691 67.066 19.3738 65.9808 19.8673 65.0533C20.3608 64.1258 21.2028 63.432 22.2081 63.1244L54.9062 53.123L149.699 24.1389L182.397 14.1375C182.894 13.9845 183.417 13.9311 183.936 13.9802C184.454 14.0293 184.957 14.1801 185.417 14.4238C185.877 14.6675 186.285 14.9995 186.616 15.4006C186.947 15.8018 187.196 16.2643 187.348 16.7616L203.482 69.4024L203.784 70.3927Z"
                fill="#F2F2F2"/>
              <path
                d="M222.659 69.4034L203.215 5.95913C202.891 4.90203 202.362 3.91896 201.658 3.06611C200.954 2.21326 200.089 1.50734 199.112 0.988686C198.135 0.47003 197.065 0.1488 195.963 0.0433656C194.862 -0.0620689 193.75 0.0503575 192.692 0.374209L146.721 14.4306L51.933 43.4197L5.96158 57.481C3.82599 58.1361 2.03783 59.6108 0.989606 61.5815C-0.0586217 63.5522 -0.28128 65.8578 0.370514 67.9923L66.8271 284.819C67.3566 286.542 68.425 288.05 69.8755 289.122C71.326 290.194 73.0822 290.773 74.8865 290.775C75.7216 290.776 76.552 290.65 77.3497 290.404L108.863 280.769L109.854 280.462V279.427L108.863 279.729L77.0574 289.458C75.1723 290.032 73.1363 289.836 71.396 288.912C69.6556 287.989 68.353 286.413 67.7739 284.532L1.32236 67.7002C1.03543 66.7679 0.935422 65.7881 1.02807 64.8171C1.12072 63.8461 1.4042 62.9029 1.86229 62.0415C2.32037 61.1801 2.94408 60.4174 3.69766 59.7971C4.45124 59.1768 5.31991 58.7111 6.25392 58.4267L52.2253 44.3654L147.013 15.3812L192.985 1.31989C193.693 1.10392 194.43 0.993802 195.17 0.993113C196.76 0.996678 198.307 1.50861 199.584 2.45392C200.861 3.39923 201.802 4.72824 202.268 6.2463L221.623 69.4034L221.931 70.3937H222.962L222.659 69.4034Z"
                fill="#3F3D56"/>
              <path
                d="M60.8066 63.2863C59.8513 63.2856 58.9214 62.9791 58.1532 62.4118C57.385 61.8445 56.8191 61.0462 56.5384 60.134L50.1543 39.3036C49.9827 38.744 49.9232 38.1562 49.9791 37.5737C50.035 36.9912 50.2052 36.4253 50.48 35.9085C50.7549 35.3917 51.129 34.9341 51.5809 34.5617C52.0328 34.1893 52.5537 33.9096 53.1139 33.7383L140.318 7.06946C141.449 6.72462 142.671 6.84223 143.716 7.39646C144.76 7.95069 145.542 8.89627 145.889 10.0257L152.273 30.8563C152.618 31.9864 152.501 33.207 151.946 34.2504C151.391 35.2937 150.445 36.0746 149.314 36.4218L62.1099 63.0907C61.6876 63.2202 61.2483 63.2861 60.8066 63.2863V63.2863Z"
                fill="#638DFF"/>
              <path
                d="M94.2493 22.2578C99.7241 22.2578 104.162 17.8244 104.162 12.3555C104.162 6.88655 99.7241 2.45312 94.2493 2.45312C88.7746 2.45312 84.3364 6.88655 84.3364 12.3555C84.3364 17.8244 88.7746 22.2578 94.2493 22.2578Z"
                fill="#638DFF"/>
              <path
                d="M94.2493 18.6259C97.7161 18.6259 100.527 15.8185 100.527 12.3555C100.527 8.89238 97.7161 6.08499 94.2493 6.08499C90.7825 6.08499 87.9721 8.89238 87.9721 12.3555C87.9721 15.8185 90.7825 18.6259 94.2493 18.6259Z"
                fill="white"/>
              <path
                d="M298.696 288.244H131.167C130.05 288.243 128.979 287.799 128.189 287.01C127.399 286.221 126.955 285.151 126.954 284.036V83.5133C126.955 82.3975 127.399 81.3278 128.189 80.5388C128.979 79.7498 130.05 79.306 131.167 79.3048H298.696C299.813 79.3061 300.884 79.7499 301.674 80.5388C302.463 81.3278 302.908 82.3975 302.909 83.5133V284.036C302.908 285.151 302.463 286.221 301.674 287.01C300.884 287.799 299.813 288.243 298.696 288.244V288.244Z"
                fill="#E6E6E6"/>
              <path
                d="M221.622 69.4024H117.288C115.055 69.4056 112.913 70.2934 111.334 71.8712C109.754 73.449 108.866 75.5881 108.862 77.8194V279.728L109.854 279.426V77.8194C109.856 75.8505 110.64 73.9628 112.034 72.5706C113.428 71.1783 115.317 70.3951 117.288 70.3927H221.93L221.622 69.4024ZM312.574 69.4024H117.288C115.055 69.4056 112.913 70.2934 111.334 71.8712C109.754 73.449 108.866 75.5881 108.862 77.8194V304.583C108.866 306.814 109.754 308.953 111.334 310.531C112.913 312.109 115.055 312.997 117.288 313H312.574C314.808 312.997 316.949 312.109 318.529 310.531C320.108 308.953 320.997 306.814 321 304.583V77.8194C320.997 75.5881 320.108 73.449 318.529 71.8712C316.949 70.2934 314.808 69.4056 312.574 69.4024V69.4024ZM320.009 304.583C320.006 306.552 319.222 308.44 317.828 309.832C316.435 311.224 314.545 312.007 312.574 312.01H117.288C115.317 312.007 113.428 311.224 112.034 309.832C110.64 308.44 109.856 306.552 109.854 304.583V77.8194C109.856 75.8505 110.64 73.9628 112.034 72.5706C113.428 71.1783 115.317 70.3951 117.288 70.3927H312.574C314.545 70.3951 316.435 71.1783 317.828 72.5706C319.222 73.9628 320.006 75.8505 320.009 77.8194V304.583Z"
                fill="#3F3D56"/>
              <path
                d="M260.531 91.1876H169.332C168.149 91.1863 167.015 90.7163 166.179 89.881C165.343 89.0456 164.872 87.9129 164.871 86.7315V64.9464C164.872 63.765 165.343 62.6323 166.179 61.7969C167.015 60.9616 168.149 60.4917 169.332 60.4903H260.531C261.714 60.4917 262.848 60.9616 263.684 61.7969C264.52 62.6323 264.991 63.765 264.992 64.9464V86.7315C264.991 87.9129 264.52 89.0456 263.684 89.881C262.848 90.7163 261.714 91.1863 260.531 91.1876V91.1876Z"
                fill="#638DFF"/>
              <path
                d="M214.931 61.9757C220.406 61.9757 224.844 57.5423 224.844 52.0734C224.844 46.6044 220.406 42.171 214.931 42.171C209.456 42.171 205.018 46.6044 205.018 52.0734C205.018 57.5423 209.456 61.9757 214.931 61.9757Z"
                fill="#638DFF"/>
              <path
                d="M214.931 58.1048C218.266 58.1048 220.969 55.4044 220.969 52.0734C220.969 48.7423 218.266 46.0419 214.931 46.0419C211.597 46.0419 208.893 48.7423 208.893 52.0734C208.893 55.4044 211.597 58.1048 214.931 58.1048Z"
                fill="white"/>
            </g>
            <defs>
              <clipPath id="clip0_4_77">
                <rect width="321" height="313" fill="white" />
              </clipPath>
            </defs>
          </svg>
          <p className="home-empty-string">Sorry, Nothing to show</p>
        </div>
      )}
      <p className='budget-value'>Your Budget = {list.sum} / <span>{list.total}</span></p>
    </div>
  );
}

export default ListComponent;


